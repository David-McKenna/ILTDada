// Main includes
#ifndef __ILT_DADA_INCLUDE_H
#define __ILT_DADA_INCLUDE_H

// Socket-related defines and includes (getaddrinfo man page requests all of them)
#define _GNU_SOURCE 1
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <sys/time.h> // struct timeval for timeout, recvmmsg has an edge case we'd like to avoid


// Let me print stuff and see errors
#include <stdio.h>
#include <errno.h>

// Include for sleep();
#include <unistd.h>

// Include for strerror();
#include <string.h>

// Include for free();
#include <stdlib.h>

// PSRDADA includes
#include "ipcio.h"
#include "multilog.h"

// Include udpPacketManager general for consistent constants between the writer/consumer, easy access to the source bytes struct and the packet number functions
#undef __GNU_SOURCE
#include "lofar_udp_general.h"
#include "lofar_udp_io.h"
#include "lofar_udp_time.h"

#define ILTD_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define ILTD_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define ILTD_VERSION_PATCH @PROJECT_VERSION_PATCH@
#define ILTD_VERSION "@PROJECT_VERSION@"

#define ILTD_CLI_VERSION "@ILTD_CLI_VERSION@"

#define DEF_PORT @ILTD_DEFAULT_PORT@


#endif // End of __ILT_DADA_INCLUDE_H

// Main Defines
#ifndef __ILT_DADA_DEFINES_H
#define __ILT_DADA_DEFINES_H

// UDPNTIMESLICE * UDPNPOL * 122 + UDPHDRLEN
#define MAX_UDP_LEN 7824

#define MIN_PORT 1023
#define MAX_PORT 49152

#endif

// If the compiler can't find this in the dada header
#ifndef DADA_DEFAULT_HEADER_SIZE
#define DADA_DEFAULT_HEADER_SIZE 4096
#endif


#ifndef __ILT_DADA_STRUCTS
#define __ILT_DADA_STRUCTS

typedef enum {
	NO_CHECKS,
	CHECK_ALL_PACKETS,
	CHECK_FIRST_LAST
} check_parameter_types;

typedef enum {
	UNINITIALISED = 0,
	NETWORK_READY = 1,
	RINGBUFFER_READY = 2,
	NETWORK_CHECKED = 4,
	COMPLETE = 8
} config_states;

typedef struct ilt_dada_operate_params {
	int8_t *packetBuffer;
	struct mmsghdr *msgvec;
	struct iovec *iovecs;
	struct timespec *timeout;
	
	long packetsSeen;
	long packetsExpected;
	long packetsLastSeen;
	long packetsLastExpected;
	long finalPacket;
	long bytesWritten;
} ilt_dada_operate_params;
extern const ilt_dada_operate_params ilt_dada_operate_params_default;

typedef struct ilt_dada_config {
	// UDP configuration
	int portNum;
	long portBufferSize;
	int portPriority;
	int packetSize;
	float portTimeout;
	int recvflags;

	// ILTDada runtime options
	int forceStartup;
	int checkInitParameters;
	int checkInitData;
	check_parameter_types checkParameters;
	int writesPerStatusLog;


	// Observation configuration
	long startPacket;
	long endPacket;
	long currentPacket;
	int packetsPerIteration;
	unsigned char obsClockBit;


	// Ringbuffer working variables
	int sockfd;
	char headerText[DADA_DEFAULT_HEADER_SIZE];

	// Main operation loop variables
	ilt_dada_operate_params *params;
	lofar_udp_io_write_config *io;
	config_states state;
} ilt_dada_config;
extern const ilt_dada_config ilt_dada_config_default;

#endif // End of __ILT_DADA_STRUCTS


// Main Prototypes
#ifndef __ILT_DADA_PROTOS_H
#define __ILT_DADA_PROTOS_H
// Allow C++ imports too
#ifdef __cplusplus
extern "C" {
#endif 

// Main functions
ilt_dada_config* ilt_dada_init();
int ilt_dada_config_setup(ilt_dada_config *config, int setup_io);
void ilt_dada_config_cleanup(ilt_dada_config *config);

// Internal setup functions
int ilt_dada_check_config(ilt_dada_config *config, config_states expectedState);
int ilt_dada_check_network(ilt_dada_config *config, int flags);
int ilt_dada_check_header(ilt_dada_config *config, uint8_t* buffer);

void ilt_dada_sleep(double seconds, int verbose);
void ilt_dada_sleep_multilog(double seconds, multilog_t* mlog);

int ilt_dada_operate(ilt_dada_config *config);
int ilt_dada_operate_loop(ilt_dada_config *config);
void ilt_dada_packet_comments(multilog_t *multilog, int portNum, long currentPacket, long startPacket, long endPacket, long packetsLastExpected, long packetsLastSeen, long packetsExpected, long packetsSeen);


// Internal functions, may be useful elsewhere (e.g., fill_buffer)
int ilt_dada_initialise_port(ilt_dada_config *config);
void cleanup_initialise_port(struct addrinfo *serverInfo, int sockfd_init);
int ilt_dada_setup_ringbuffer(ilt_dada_config *config);
int ilt_data_operate_prepare(ilt_dada_config *config);
void ilt_dada_operate_cleanup(ilt_dada_config *config);


#ifdef __cplusplus
}
#endif


#endif // End of __ILT_DADA_PROTOS_H